#!/bin/bash

set -e

DATE=$(date '+%Y-%m-%d_%H-%M-%S')
GREEN='\e[1;32m'
YELLOW='\e[0;33m'
RED='\e[1;31m'

export VARIANT=$2
export VERSION=$3

if [[ "$EUID" -ne 0 ]]; then
	echo -e $RED "Run this script as root"
	exit 1
fi

log() {
	mkdir -p /var/log/kaisen-build
	exec > >(tee /var/log/kaisen-build/kaisen-build-$VARIANT-$DATE.log) 2>&1
}

function explaination() {
	echo -e $GREEN "Kaisen Linux ISO build system

USAGE
	cd ~/kaisen-build (with no root user)
 	sudo ./kaisen-build <action> <variant> <version>

EXPLAINATION

      action  - help, build, clean
                help: display help
		build: build iso
		clean: clean residual files

      variant - MATE, XFCE, KDE, LXDE, SR, NETINST, CUSTOM
		the graphical interface to use (or SR or NETINST or CUSTOM use)

      version - select your version number

EXAMPLE
 	 sudo ./kaisen-build build CUSTOM 1.0
      or sudo ./kaisen-build build CUSTOM

DOCUMENTATION
	https://kaisenlinux.org/documentation/faq.html#how-to-build-custom-iso
"
}

function kaisen-build() {
	if [ ! -e variant/$VARIANT ] && [Â ! -d variant/$VARIANT ]; then
		echo -e $RED "The variant $VARIANT does not exist or does not a folder in variant folder."
	fi
	case $VARIANT in
		KDE|LXDE|MATE|XFCE|SR)
	log
	lb build
	mv live-image-amd64.hybrid.iso ../kaisenlinuxrolling$VERSION-amd64-$VARIANT.iso
	echo -e $YELLOW "ISO can be found in ../kaisenlinuxrolling$VERSION-amd64-$VARIANT.iso";tput init
	lb clean
        rm -rf cache config unpacked-initrd .build || true
	echo -e $GREEN "All files generated by kaisen-build has been deleted successfully."
	;;
	esac
	case $VARIANT in
                CUSTOM)
	log
	lb build
        mv live-image-amd64.hybrid.iso ../kaisenlinuxCUSTOM-amd64-$VERSION.iso
	echo -e $YELLOW "ISO can be found in ../kaisenlinuxCUSTOM-amd64-$VERSION.iso";tput init
	lb clean
        rm -rf cache config unpacked-initrd .build || true
	echo -e $GREEN "All files generated by kaisen-build has been deleted successfully."
        ;;
        esac
	case $VARIANT in
		NETINST)
	echo -e $YELLOW "Warning: This branch is experimental. Use only for testing."
	echo ""
	while [[ $OPTION != "y" && $OPTION != "n" ]]; do
                read -rp "$(echo -e $GREEN "Do you wish continue? [y/n]")" OPTION
		echo ""
		tput init
        done
	if [[ $OPTION = "y" ]]; then
	log
	build-simple-cdd \
	--verbose \
	--debug \
	--force-root \
	--conf variant/NETINST/simple-cdd.conf \
	--dist kaisen-rolling \
	--debian-mirror https://deb.kaisenlinux.org/
	mv images/kaisen-Rolling-amd64-NETINST-1.iso ../kaisenlinuxrolling$VERSION-amd64-$VARIANT.iso
	echo -e $YELLOW "ISO can be found in ../kaisenlinuxrolling$VERSION-amd64-$VARIANT.iso"
	rm -rf tmp images || true
	echo -e $GREEN "All files generated by kaisen-build has been deleted successfully."
	fi
	if [[ $OPTION = "n" ]]; then
                exit 0
        fi
	;;
	esac
}

function clean() {
	lb clean
	rm -rf cache config unpacked-initrd .build tmp images || true
	echo -e $GREEN "All files generated by kaisen-build has been deleted successfully."
}

case $1 in
        build)
                kaisen-build
        ;;
	clean)
		clean
	;;
        help)
                explaination
        ;;
        *)
                explaination
        ;;
esac
